/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        Backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <9 8>;
        };

        Return {
            bindings = <&kp RET>;
            key-positions = <21 20>;
        };

        spacebar {
            bindings = <&period_space>;
            key-positions = <38 39>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <2 1>;
        };

        DF_V {
            bindings = <&kp C>;
            key-positions = <15 16>;
        };

        FG_B {
            bindings = <&kp B>;
            key-positions = <16 17>;
        };

        L_Shift {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <13 25>;
        };

        R_Shift {
            bindings = <&kp RIGHT_SHIFT>;
            key-positions = <22 34>;
        };

        layertoggleL {
            bindings = <&mo 1>;
            key-positions = <37 40>;
        };

        GT_V {
            bindings = <&kp V>;
            key-positions = <17 5>;
        };

        JKcomma {
            bindings = <&kp COMMA>;
            key-positions = <19 20>;
        };

        JKL_exclam {
            bindings = <&kp EXCL>;
            key-positions = <19 20 21>;
        };

        comma-space {
            bindings = <&comma_space>;
            key-positions = <38 40>;
        };
    };

    behaviors {
        Kx2345: Kx2345 {
            compatible = "zmk,behavior-tap-dance";
            label = "KX2345";
            #binding-cells = <0>;
            bindings =
                <&kp K>,
                <&kp PERIOD>,
                <&kp COMMA>,
                <&kp QUESTION>,
                <&kp EXCL>;

            tapping-term-ms = <400>;
        };

        spacebar_hold_mod: spacebar_hold_mod {
            compatible = "zmk,behavior-hold-tap";
            label = "SPACEBAR_HOLD_MOD";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
        };

        hn: hn {
            compatible = "zmk,behavior-hold-tap";
            label = "HN";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <180>;
            flavor = "balanced";
        };

        jm: jm {
            compatible = "zmk,behavior-hold-tap";
            label = "JM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <180>;
            flavor = "balanced";
        };

        az: az {
            compatible = "zmk,behavior-hold-tap";
            label = "AZ";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
        };

        sx: sx {
            compatible = "zmk,behavior-hold-tap";
            label = "SX";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <180>;
            flavor = "balanced";
        };

        dc: dc {
            compatible = "zmk,behavior-hold-tap";
            label = "DC";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <180>;
            flavor = "balanced";
        };

        fv: fv {
            compatible = "zmk,behavior-hold-tap";
            label = "FV";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <180>;
            flavor = "balanced";
        };

        gb: gb {
            compatible = "zmk,behavior-hold-tap";
            label = "GB";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <180>;
            flavor = "balanced";
        };

        quest_23: quest_23 {
            compatible = "zmk,behavior-tap-dance";
            label = "QUEST_23";
            #binding-cells = <0>;
            bindings = <&kp QUESTION>, <&kp EXCLAMATION>;

            tapping-term-ms = <400>;
        };
    };

    macros {
        period_space: period_space {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOT &kp SPACE>;
            label = "PERIOD_SPACE";
        };

        comma_space: comma_space {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COMMA &kp SPACE>;
            label = "COMMA_SPACE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q  &kp W  &kp E         &kp R             &kp T                         &kp Y                       &kp U  &kp I      &kp O       &kp P         &none
&none  &kp A  &kp S  &kp D         &kp F             &kp G                         &kp H                       &kp J  &kp K      &kp L       &kp SQT       &none
&none  &kp Z  &kp X  &kp C         &kp V             &kp B                         &kp N                       &kp M  &kp COMMA  &kp PERIOD  &kp QUESTION  &none
                     &kp LEFT_ALT  &kp LEFT_COMMAND  &spacebar_hold_mod 2 SPACE    &spacebar_hold_mod 2 SPACE  &none  &none
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &none         &none         &none         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LS(LA(MINUS))  &none         &none         &none
&none  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4          &kp NUMBER_5             &kp NUMBER_6      &kp NUMBER_7       &kp NUMBER_8       &kp NUMBER_9  &kp NUMBER_0  &none
&none  &trans        &trans        &trans        &trans                &trans                   &none             &none              &none              &none         &none         &none
                                   &none         &none                 &none                    &none             &trans             &none
            >;
        };

        OPT {
            bindings = <
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3    &kp NUMBER_4  &kp N5    &kp NUMBER_6       &kp NUMBER_7    &kp NUMBER_8  &kp NUMBER_9     &kp NUMBER_0  &trans
&trans  &none         &none         &none           &none         &none     &none              &kp LEFT_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &none         &trans
&trans  &trans        &trans        &trans          &none         &none     &none              &none           &kp DOWN      &trans           &trans        &trans
                                    &bt BT_CLR_ALL  &trans        &none     &kp RS(RA(MINUS))  &trans          &bt BT_NXT
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
